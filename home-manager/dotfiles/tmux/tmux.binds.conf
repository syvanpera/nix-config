unbind M-v

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

bind Escape copy-mode
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "wl-copy"
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

bind C-l send-keys 'C-l'

# Resize pane with meta + arrow keys
bind -n M-h resize-pane -L 1
bind -n C-M-h resize-pane -L 1
bind -n M-Left resize-pane -L 1
bind -n M-S-Left resize-pane -L 5
bind -n M-l resize-pane -R 1
bind -n C-M-l resize-pane -R 1
bind -n M-Right resize-pane -R 1
bind -n M-S-Right resize-pane -R 5
bind -n M-j resize-pane -D 1
bind -n C-M-j resize-pane -D 1
bind -n M-Down resize-pane -D 1
bind -n M-S-Down resize-pane -D 5
bind -n M-k resize-pane -U 1
bind -n C-M-k resize-pane -U 1
bind -n M-Up resize-pane -U 1
bind -n M-S-Up resize-pane -U 5

# window navigation
bind -r h previous-window # select previous window
bind -r k previous-window # select previous window
bind -r l next-window     # select next window
bind -r j next-window     # select next window
bind Tab last-window      # move to last active window

# Move pane to new window
bind-key b break-pane

bind C-d detach     # the same as d so you don't have to depress Ctrl

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# bind v new-window -n "sh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Configuration reloaded.\"'"
# bind u source-file ~/.tmux.conf \; display-message "Configuration reloaded."

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$|emacs'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Smart pane switching with awareness of Vim splits.
# Makes ctrl-j and ctrl-k navigate fzf search results when fzf active in pane
# providing the same behavior as ctrl-j and ctrl-k when navigating ctrl-p results
# inside vim.
# is_vim_emacs="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$|emacs'"

# is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# bind -n C-h run "($is_vim_emacs && tmux send-keys C-h) || \
#                  tmux select-pane -L"

# bind -n C-j run "($is_vim_emacs && tmux send-keys C-j)  || \
#                  ($is_fzf && tmux send-keys C-j) || \
#                  tmux select-pane -D"

# bind -n C-k run "($is_vim_emacs && tmux send-keys C-k) || \
#                  ($is_fzf && tmux send-keys C-k)  || \
#                  tmux select-pane -U"

# bind -n C-l run "($is_vim_emacs && tmux send-keys C-l) || \
#                  tmux select-pane -R"

# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

